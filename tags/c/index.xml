<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>C on 找一个吃麦旋风的理由</title>
    <link>https://zero4drift.github.io/tags/c/</link>
    <description>Recent content in C on 找一个吃麦旋风的理由</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Sun, 25 Mar 2018 19:48:00 +0800</lastBuildDate>
    
	<atom:link href="https://zero4drift.github.io/tags/c/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>CSAPP-proxylab 解题思路记录</title>
      <link>https://zero4drift.github.io/posts/csapp-proxylab-jie-ti-si-lu-ji-lu/</link>
      <pubDate>Sun, 25 Mar 2018 19:48:00 +0800</pubDate>
      
      <guid>https://zero4drift.github.io/posts/csapp-proxylab-jie-ti-si-lu-ji-lu/</guid>
      <description>准备 proxy lab 的难度和 malloc lab 不在一个数量级上，主要体现在两个方面： 除了第三部分要实现 cache 以外，前面两部分要求实现 proxy 和 synchronization, 都可以在书上的示例代码中拼凑出来</description>
    </item>
    
    <item>
      <title>CSAPP-malloclab 解题思路记录</title>
      <link>https://zero4drift.github.io/posts/csapp-malloclab-jie-ti-si-lu-ji-lu/</link>
      <pubDate>Tue, 20 Mar 2018 20:20:00 +0800</pubDate>
      
      <guid>https://zero4drift.github.io/posts/csapp-malloclab-jie-ti-si-lu-ji-lu/</guid>
      <description>准备 警告：这可以说是 CSAPP 所有的 lab 里面最难的一个，datalab 也很难，但是 datalab 只是难在思路，代码量少，二进制数据操作简明，犯错惩罚小；而 malloc lab&amp;hellip; 恩，</description>
    </item>
    
    <item>
      <title>CSAPP-shlab 解题思路记录</title>
      <link>https://zero4drift.github.io/posts/csapp-shlab-jie-ti-si-lu-ji-lu/</link>
      <pubDate>Sat, 10 Mar 2018 18:07:00 +0800</pubDate>
      
      <guid>https://zero4drift.github.io/posts/csapp-shlab-jie-ti-si-lu-ji-lu/</guid>
      <description>写在前面 我宁愿去处理汇编代码！这次的 lab 太繁杂太发散；汇编虽然难，起码有的放矢，一码是一码。 阅读官方指导文档 这次必须仔细阅读文档，否则必然踩坑</description>
    </item>
    
    <item>
      <title>CSAPP-cachelab 解题思路记录</title>
      <link>https://zero4drift.github.io/posts/csapp-cachelab-jie-ti-si-lu-ji-lu/</link>
      <pubDate>Tue, 06 Feb 2018 22:25:00 +0800</pubDate>
      
      <guid>https://zero4drift.github.io/posts/csapp-cachelab-jie-ti-si-lu-ji-lu/</guid>
      <description>模拟缓存 阅读官方指导文档 文档中写清楚了 lab 要求和限制，比较容易忽略的几点是： 代码文件编译时不能有警告和错误； 不用考虑指令的缓存读写，就是 .trace 文件</description>
    </item>
    
    <item>
      <title>CSAPP-attacklab 解题思路记录</title>
      <link>https://zero4drift.github.io/posts/csapp-attacklab-jie-ti-si-lu-ji-lu/</link>
      <pubDate>Sat, 03 Feb 2018 14:32:00 +0800</pubDate>
      
      <guid>https://zero4drift.github.io/posts/csapp-attacklab-jie-ti-si-lu-ji-lu/</guid>
      <description>准备 官方 lab 主页 lab 的指导文档是必须看的，阅读官网页面上此 lab 的 pdf 格式的指 导文件，其中详细记录每一个破解操作的要求，少走很多弯路； 在 CSAPP Lab Assginments 官网上包</description>
    </item>
    
    <item>
      <title>CSAPP-bomb 解题思路记录</title>
      <link>https://zero4drift.github.io/posts/csapp-bomb-jie-ti-si-lu-ji-lu/</link>
      <pubDate>Mon, 29 Jan 2018 22:26:00 +0800</pubDate>
      
      <guid>https://zero4drift.github.io/posts/csapp-bomb-jie-ti-si-lu-ji-lu/</guid>
      <description>写在前面 阅读汇编代码容易出现找不到重点的问题，建议首先看 函数调用处上下文 跳转处上下文 经常使用 gdb 可以事半功倍，实在找不着北的话，在当前理解有困</description>
    </item>
    
    <item>
      <title>CSAPP-datalab 解题思路记录</title>
      <link>https://zero4drift.github.io/posts/csapp-datalab-jie-ti-si-lu-ji-lu/</link>
      <pubDate>Sun, 28 Jan 2018 19:40:00 +0800</pubDate>
      
      <guid>https://zero4drift.github.io/posts/csapp-datalab-jie-ti-si-lu-ji-lu/</guid>
      <description>datalab 解题思路 本篇文章并不会花太长时间，因为解题思路都写在代码注释中了（写代码的时候用注释描述 整体方向和关键步骤实在是个好习惯）。 代码中的注释都</description>
    </item>
    
  </channel>
</rss>